import logging
import sys
from datetime import datetime

class ColoredFormatter(logging.Formatter):
    COLORS = {
        'INFO': '\033[92m',  # –∑–µ–ª–µ–Ω—ã–π
        'WARNING': '\033[93m',  # –∂–µ–ª—Ç—ã–π
        'ERROR': '\033[91m',  # –∫—Ä–∞—Å–Ω—ã–π
        'DEBUG': '\033[94m',  # —Å–∏–Ω–∏–π
        'RESET': '\033[0m'  # —Å–±—Ä–æ—Å —Ü–≤–µ—Ç–∞
    }
    
    def format(self, record):
        log_message = super().format(record)
        return f"{self.COLORS.get(record.levelname, self.COLORS['RESET'])}{log_message}{self.COLORS['RESET']}"

def setup_logger(name="StealthyParser", log_file="extraction.log"):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ü–≤–µ—Ç–Ω—ã–º –≤—ã–≤–æ–¥–æ–º –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –∑–∞–ø–∏—Å—å—é –≤ —Ñ–∞–π–ª"""
    logger = logging.getLogger(name)
    logger.setLevel(logging.INFO)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if not logger.handlers:
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —Ñ–∞–π–ª
        file_handler = logging.FileHandler(log_file)
        file_handler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(message)s'))
        logger.addHandler(file_handler)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å —Ü–≤–µ—Ç–∞–º–∏
        console_handler = logging.StreamHandler(sys.stdout)
        console_handler.setFormatter(ColoredFormatter('%(asctime)s - %(levelname)s - %(message)s'))
        logger.addHandler(console_handler)
    
    return logger

def log_start(logger):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –Ω–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º"""
    logger.info("=" * 60)
    logger.info(f"ü•∑ –ù–ê–ß–ê–õ–û –°–ö–†–´–¢–û–ì–û –ü–ê–†–°–ò–ù–ì–ê: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    logger.info("=" * 60)